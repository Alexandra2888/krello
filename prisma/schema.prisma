// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Board {
  id            String @id @default(uuid()) @map("_id")
  orgId         String
  title         String
  imageId       String
  imageThumbUrl String @db.String
  imageFullUrl  String @db.String
  imageUserName String @db.String
  imageLinkHTML String @db.String

  lists List[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model List {
  id            String @id @default(uuid()) @map("_id")
  title         String
  order         Int

  boardId       String
  board         Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards         Card[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt 

  @@index([boardId])
}

model Card {
  id            String @id @default(uuid()) @map("_id")
  title         String
  order         Int
  description   String? @db.String

  listId        String
  list          List @relation(fields: [listId], references: [id], onDelete: Cascade)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id            String @id @default(uuid()) @map("_id")
  orgId         String
  action        ACTION
  entityId      String
  entityType    ENTITY_TYPE
  entityTitle   String
  userId        String
  userImage     String @db.String
  userName      String @db.String

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}